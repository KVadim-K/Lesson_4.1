# Класс `Account` из представленного кода содержит методы для работы с банковским счетом: `deposit`, `withdraw` и `info`.
# Оценим сложность каждого метода и предоставим пояснения.
# 1. **Конструктор `__init__`:**
#    - В методе `__init__` происходит инициализация объекта с заданными `id` и `balance`.
#    - Операции присвоения имеют сложность \(O(1)\).
#    - Общая сложность: \(O(1)\).
# 2. **Метод `deposit`:**
#    - Метод проверяет, является ли сумма `money` положительной, и, если да, добавляет ее к текущему балансу.
#    - Операции сложения и сравнения имеют сложность \(O(1)\).
#    - Общая сложность: \(O(1)\).
# 3. **Метод `withdraw`:**
#    - Метод проверяет, достаточно ли средств для снятия заданной суммы `money`. Если средств достаточно,
#      сумма вычитается из текущего баланса. В противном случае, выводится сообщение о нехватке средств.
#    - Операции сравнения и вычитания имеют сложность \(O(1)\).
#    - Общая сложность: \(O(1)\).
# 4. **Метод `info`:**
#    - Метод выводит текущий баланс счета.
#    - Операция вывода имеет сложность \(O(1)\).
#    - Общая сложность: \(O(1)\).
# Таким образом, все методы класса `Account` имеют константную сложность \(O(1)\),
# так как выполняют простые операции присвоения, арифметические операции и вывод данных.
# Все они выполняются за фиксированное время, независимо от размера или состояния объекта.
class Account():
    def __init__(self, id, balance=0):
        self.id = id
        self.balance = balance
    def deposit(self, money):
        if money > 0:
            self.balance += money
            print(f"Вы успешно положили {money} рублей на счет. Сумма на счету - {self.balance}")
    def withdraw(self, money):
        if money > self.balance:
            print(f"Вы успешно положили {money} рублей на счет. Сумма на счету - {self.balance}.")
        elif money < self.balance:
            self.balance -= money
            print(f"Вы успешно сняли {money} рублей со счета. Остаток на счету - {self.balance}.")
    def info(self):
        print(f"Ваш баланс - {self.balance} рублей")
man = Account(id = "1234556789", balance = 1000)

man.info()
man.deposit(1000)
man.withdraw(500)
man.withdraw(800)
man.deposit(23000)
man.info()